name: "CI"

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '[0-9]+.x'
    paths:
      - '**'
      - '!docs/**'
      - '!**.md'
  pull_request:
    paths:
      - '**'
      - '!docs/**'
      - '!**.md'

env:
  GO_LATEST_VERSION: 1.20.2

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.18.x, 1.20.2 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup Go Caches
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Checkout
        uses: actions/checkout@v3

      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.go-version == env.GO_LATEST_VERSION }}
        with:
          version: 1.51.2

      - name: Test
        run: make test-ci

      - name: Code Coverage
        uses: codecov/codecov-action@v3
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.go-version == env.GO_LATEST_VERSION }}
        timeout-minutes: 5
        with:
          fail_ci_if_error: false

  vuln:
    name: vuln
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3

      - name: Setup Go Caches
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.20.2-

      - name: Checkout
        uses: actions/checkout@v3

      - name: Go Vuln
        run: |
          export GO111MODULE=on
          export PATH=${PATH}:`go env GOPATH`/bin
          go install golang.org/x/vuln/cmd/govulncheck@latest
          `go env GOPATH`/bin/govulncheck ./...      

  auto_merge:
    needs:
      - build
      - vuln
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.user.login == 'dependabot[bot]'
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.6.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
